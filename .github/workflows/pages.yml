name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup mdBook
        uses: peaceiris/actions-mdbook@v1
        with:
          mdbook-version: 'latest'

      - name: Create book structure
        run: |
          mkdir -p book/src
          cp README.md book/src/
          cp RELEASE.md book/src/
          cp INSTALL.md book/src/

      - name: Create book.toml
        run: |
          cat > book/book.toml << 'EOF'
          [book]
          authors = ["nghiadaulau"]
          language = "en"
          multilingual = false
          src = "src"
          title = "opsbrew Documentation"
          
          [output.html]
          git-repository-url = "https://github.com/nghiadaulau/opsbrew"
          git-repository-icon = "fa-github"
          default-theme = "light"
          preferred-dark-theme = "navy"
          mathjax-support = true
          
          [output.html.fold]
          enable = true
          level = 1
          
          [output.html.additional-css]
          [output.html.additional-js]
          EOF

      - name: Create SUMMARY.md
        run: |
          cat > book/src/SUMMARY.md << 'EOF'
          # Summary
          
          [Introduction](README.md)
          [Installation Guide](INSTALL.md)
          [Release Guide](RELEASE.md)
          
          # Commands
          
          ## Git Commands
          - [git status](commands/git-status.md)
          - [git sync](commands/git-sync.md)
          - [git checkout](commands/git-checkout.md)
          
          ## Kubernetes Commands
          - [k8s kctx](commands/k8s-kctx.md)
          - [k8s kns](commands/k8s-kns.md)
          - [k8s khpa](commands/k8s-khpa.md)
          - [k8s kscale](commands/k8s-kscale.md)
          
          ## File Commands
          - [file open](commands/file-open.md)
          - [file backup](commands/file-backup.md)
          - [file find](commands/file-find.md)
          
          ## Other Commands
          - [brew](commands/brew.md)
          - [init](commands/init.md)
          - [completion](commands/completion.md)
          EOF

      - name: Create command documentation
        run: |
          mkdir -p book/src/commands
          
          # Git commands
          cat > book/src/commands/git-status.md << 'EOF'
          # git status
          
          Show the working tree status.
          
          ```bash
          opsbrew git status
          ```
          EOF
          
          cat > book/src/commands/git-sync.md << 'EOF'
          # git sync
          
          Sync current branch with remote using rebase.
          
          ```bash
          opsbrew git sync
          ```
          EOF
          
          cat > book/src/commands/git-checkout.md << 'EOF'
          # git checkout
          
          Checkout branch with fuzzy finder.
          
          ```bash
          opsbrew git checkout [branch]
          ```
          EOF
          
          # Kubernetes commands
          cat > book/src/commands/k8s-kctx.md << 'EOF'
          # k8s kctx
          
          Switch Kubernetes context with fuzzy finder.
          
          ```bash
          opsbrew k8s kctx
          ```
          EOF
          
          cat > book/src/commands/k8s-kns.md << 'EOF'
          # k8s kns
          
          Switch Kubernetes namespace with fuzzy finder.
          
          ```bash
          opsbrew k8s kns
          ```
          EOF
          
          cat > book/src/commands/k8s-khpa.md << 'EOF'
          # k8s khpa
          
          Manage HPA (Horizontal Pod Autoscaler).
          
          ```bash
          opsbrew k8s khpa list
          opsbrew k8s khpa set-min my-hpa 2 -n production
          opsbrew k8s khpa set-max my-hpa 10 -n production
          ```
          EOF
          
          cat > book/src/commands/k8s-kscale.md << 'EOF'
          # k8s kscale
          
          Scale Kubernetes resources.
          
          ```bash
          opsbrew k8s kscale deployment my-app 3 -n production
          ```
          EOF
          
          # File commands
          cat > book/src/commands/file-open.md << 'EOF'
          # file open
          
          Open file with default editor.
          
          ```bash
          opsbrew file open config.yaml
          ```
          EOF
          
          cat > book/src/commands/file-backup.md << 'EOF'
          # file backup
          
          Create backup of file.
          
          ```bash
          opsbrew file backup config.yaml
          ```
          EOF
          
          cat > book/src/commands/file-find.md << 'EOF'
          # file find
          
          Find files by name or pattern.
          
          ```bash
          opsbrew file find "*.yaml"
          ```
          EOF
          
          # Other commands
          cat > book/src/commands/brew.md << 'EOF'
          # brew
          
          Manage and run command recipes/macros.
          
          ```bash
          opsbrew brew save my-workflow
          opsbrew brew run my-workflow
          opsbrew brew list
          ```
          EOF
          
          cat > book/src/commands/init.md << 'EOF'
          # init
          
          Initialize a new project from template.
          
          ```bash
          opsbrew init github-actions
          opsbrew init k8s-deployment
          ```
          EOF
          
          cat > book/src/commands/completion.md << 'EOF'
          # completion
          
          Generate completion script.
          
          ```bash
          opsbrew completion bash
          opsbrew completion zsh
          ```
          EOF

      - name: Build mdBook
        run: mdbook build book

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: book/book

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
